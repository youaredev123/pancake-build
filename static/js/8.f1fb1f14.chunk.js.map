{"version":3,"sources":["../node_modules/lodash/shuffle.js","../node_modules/lodash/_arrayShuffle.js","../node_modules/lodash/_baseShuffle.js","views/Profile/ProfileCreation/config.ts","views/Profile/ProfileCreation/contexts/ProfileCreationProvider.tsx","views/Profile/ProfileCreation/Header.tsx","views/Profile/components/WalletNotConnected.tsx","hooks/useHasCakeBalance.ts","views/Profile/components/SelectionCard.tsx","views/Profile/components/NextStepButton.tsx","views/Profile/ProfileCreation/contexts/hook.ts","views/Profile/ProfileCreation/Mint.tsx","views/Profile/ProfileCreation/ProfilePicture.tsx","views/Profile/ProfileCreation/TeamSelection.tsx","../node_modules/date-fns/esm/compareAsc/index.js","../node_modules/date-fns/esm/isLastDayOfMonth/index.js","../node_modules/date-fns/esm/differenceInMonths/index.js","../node_modules/date-fns/esm/_lib/cloneObject/index.js","../node_modules/date-fns/esm/formatDistance/index.js","views/Profile/ProfileCreation/UserName.tsx","views/Profile/components/ConfirmProfileCreationModal.tsx","views/Profile/components/EditProfileModal/reducer.ts","views/Profile/ProfileCreation/Steps.tsx","views/Profile/ProfileCreation/index.tsx","views/Profile/components/ClaimGiftModal.tsx","views/Profile/hooks/useGetProfileCosts.ts","views/Profile/components/EditProfileModal/StartView.tsx","views/Profile/components/EditProfileModal/PauseProfileView.tsx","views/Profile/components/EditProfileModal/ChangeProfilePicView.tsx","views/Profile/components/EditProfileModal/ApproveCakeView.tsx","views/Profile/components/EditProfileModal/index.tsx","views/Profile/components/Header.tsx","views/Profile/components/AchievementAvatar.tsx","views/Profile/components/AchievementTitle.tsx","views/Profile/components/AchievementDescription.tsx","views/Profile/components/AchievementCard.tsx","views/Profile/components/AchievementsList.tsx","state/achievements/hooks.ts","views/Profile/components/ActionColumn.tsx","views/Profile/components/AchievementRow/PointsLabel.tsx","views/Profile/components/AchievementRow/index.tsx","views/Profile/components/ClaimPointsCallout .tsx","views/Profile/components/Menu.tsx","views/Profile/TaskCenter.tsx","views/Profile/components/CardHeader.tsx","views/Profile/components/CollectibleCard.tsx","views/Profile/components/Collectibles.tsx","views/Profile/components/EditProfileAvatar.tsx","views/Profile/PublicProfile.tsx","views/Profile/index.tsx","hooks/useApproveConfirmTransaction.ts","views/Profile/components/ApproveConfirmButtons.tsx","views/Profile/components/ProfileAvatar.tsx","state/collectibles/hooks.ts","state/teams/hooks.ts","views/Profile/components/HeaderWrapper.tsx","../node_modules/date-fns/esm/differenceInMilliseconds/index.js","views/Profile/components/ComingSoon.tsx","views/Profile/components/SecondaryCard.tsx","views/Profile/components/StatBox.tsx","../node_modules/date-fns/esm/differenceInSeconds/index.js","../node_modules/lodash/_shuffleSelf.js"],"names":["arrayShuffle","require","baseShuffle","isArray","module","exports","collection","copyArray","shuffleSelf","array","values","REGISTER_COST","STARTER_BUNNY_IDENTIFIERS","initialState","isInitialized","currentStep","teamId","selectedNft","nftAddress","tokenId","userName","minimumCakeRequired","BigNumber","MINT_COST","multipliedBy","DEFAULT_TOKEN_DECIMAL","allowance","totalCost","reducer","state","action","type","step","ProfileCreationContext","createContext","ProfileCreationProvider","children","useReducer","dispatch","account","useWeb3React","useEffect","isSubscribed","a","bunnyFactoryContract","getBunnyFactoryContract","canMint","fetchData","actions","useMemo","nextStep","setTeamId","setSelectedNft","setUserName","Provider","value","Wrapper","styled","div","theme","colors","textSubtle","steps","Header","t","useTranslation","useContext","as","scale","color","mb","map","translationKey","index","WalletNotConnected","ConnectWalletButton","useHasCakeBalance","minimumBalance","useTokenBalance","getCakeAddress","balance","gte","Label","label","isDisabled","Body","Children","StyledBackgroundImage","src","SelectionCard","name","isChecked","image","onChange","disabled","props","isSuccess","checked","e","target","style","flex","NextStepButton","endIcon","useProfileCreation","nfts","nftList","filter","nft","includes","identifier","minimumCakeBalanceToMint","Mint","useState","variationId","setVariationId","cakeContract","useCake","useBunnyFactory","hasMinimumCakeRequired","callWithGasPrice","useCallWithGasPrice","useApproveConfirmTransaction","onRequiresApproval","address","response","currentAllowance","toString","onApprove","toJSON","onConfirm","onSuccess","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","fontSize","bold","num","images","md","Number","ApproveConfirmButtons","isApproveDisabled","isConfirmDisabled","onClick","Link","RouterLink","primary","NftWrapper","ProfilePicture","library","setIsApproved","setIsApproving","useGetCollectibles","isLoading","nftsInWallet","tokenIds","toastError","useToast","contract","getErc721Contract","getSigner","getPancakeProfileAddress","tx","wait","status","length","to","marginLeft","height","walletNft","firstTokenId","getAddressByType","parseInt","spin","undefined","id","Team","currentTeamId","teams","useTeams","handleTeamSelection","teamValues","shuffle","Object","team","isJoinable","mr","users","toLocaleString","compareAsc","dirtyDateLeft","dirtyDateRight","requiredArgs","arguments","dateLeft","toDate","dateRight","diff","getTime","isLastDayOfMonth","dirtyDate","date","endOfDay","endOfMonth","differenceInMonths","result","sign","difference","Math","abs","differenceInCalendarMonths","getMonth","getDate","setDate","setMonth","isLastMonthNotFull","cloneObject","dirtyObject","assign","MINUTES_IN_DAY","MINUTES_IN_MONTH","formatDistance","dirtyBaseDate","options","locale","defaultLocale","RangeError","comparison","isNaN","localizeOptions","addSuffix","Boolean","months","seconds","differenceInSeconds","offsetInSeconds","getTimezoneOffsetInMilliseconds","minutes","round","includeSeconds","hours","days","nearestMonth","monthsSinceStartOfYear","years","floor","ExistingUserState","ConfirmProfileCreationModal","onDismiss","profileContract","useProfile","useAppDispatch","toastSuccess","receipt","fetchProfile","Toast","txHash","transactionHash","title","justifyContent","Views","profileApiUrl","process","minimumCakeToRegister","InputWrap","Input","UIKitInput","Indicator","Flex","UserName","isAcknowledged","setIsAcknowledged","useWeb3Provider","IDLE","existingUserState","setExistingUserState","isValid","setIsValid","setIsLoading","message","setMessage","useModal","onPresentConfirmProfileCreation","isUserCreated","CREATED","checkUsernameValidity","debounce","fetch","res","ok","json","data","error","signMessage","signature","method","headers","body","JSON","stringify","username","dateCreated","parseISO","created_at","Date","NEW","fetchUser","width","event","isWarning","minLength","maxLength","placeholder","py","minHeight","htmlFor","display","cursor","marginBottom","alignItems","ml","mt","Steps","TeamSelection","ProfileCreation","Page","useCanClaim","canClaim","setCanClaim","refresh","setRefresh","checkClaimStatus","useCallback","prevRefresh","claimRefundContract","getClaimRefundContract","walletCanClaim","console","fetchClaimStatus","ClaimGift","setIsConfirming","useClaimRefundContract","handleClick","maxWidth","currentView","view","previousView","useEditProfile","START","goToStart","goToChange","CHANGE","goToRemove","REMOVE","goToApprove","APPROVE","goPrevious","useGetProfileCosts","numberCakeToReactivate","BIG_ZERO","numberCakeToRegister","numberCakeToUpdate","costs","setCosts","calls","multicallv2","profileABI","fetchCosts","DangerOutline","Button","attrs","variant","failure","AvatarWrapper","mediaQueries","sm","StartPage","needsApproval","setNeedsApproval","profile","isActive","cost","lt","checkApprovalStatus","flexDirection","ProfileAvatar","minimum","getFullDisplayBalance","PauseProfilePage","pancakeProfileContract","useProfileContract","handleDeactivateProfile","getBalanceNumber","ChangeProfilePicPage","ApproveCakePage","approve","times","viewTitle","EditProfileModal","isStartView","handleBack","onBack","hideCloseButton","StartView","PauseProfileView","ChangeProfilePicView","ApproveCakeView","ProfileHeader","onPresentClaimGiftModal","onEditProfileModal","hasProfile","HeaderWrapper","startIcon","NoBadgePlaceholder","BunnyPlaceholderIcon","StyledAchievementAvatar","img","AchievementAvatar","badge","alt","AchievementTitle","key","Description","Text","AchievementDescription","description","Details","AchievementCard","achievement","points","Grid","AchievementsList","achievements","useSelector","ActionColumn","PointsLabel","localePoints","StyledAchievementRow","cardBorder","AchievementRow","onCollectSuccess","isCollecting","setIsCollecting","pointCenterContract","usePointCenterIfoContract","handleCollectPoints","px","ClaimPointsCallout","claimableAchievements","setClaimableAchievement","getClaimableIfoData","ifoData","fetchIfoClaims","handleCollectSuccess","addAchievement","addPoints","prevClaimableAchievements","prevClaimableAchievement","totalPointsToCollect","sumBy","Menu","activeIndex","TaskCenter","ComingSoon","CardHeader","UIKitCardHeader","isDark","getBackground","PreviewImage","CollectibleCard","lg","CollectibleList","Collectibles","nftInWallet","p","EditOverlay","StyledEditProfileAvatar","EditProfileAvatar","Content","Username","Heading","Status","ResponsiveText","AddressLink","Section","PublicProfile","usePersistState","localStorageKey","usernameVisibilityToggled","setUsernameVisibility","Icon","VisibilityOff","VisibilityOn","replace","href","getBscScanLink","external","outline","StatBox","icon","PrizeIcon","subtitle","Profile","fetchAchievements","useFetchAchievements","PageLoader","exact","path","approvalState","confirmState","noop","onApproveSuccess","handlePreApprove","useRef","current","then","ButtonArrangement","StyledApproveConfirmButtonRow","UIKitButton","iconAttrs","ChevronRight","ChevronRightIcon","ChevronBottom","ChevronDownIcon","spinnerIcon","buttonArrangement","ROW","confirmLabel","confirmId","confirmButtonText","TeamAvatar","card","background","bg","AvatarInactive","NoProfileAvatarIcon","collectibles","identifiers","keys","fetchWalletNfts","Nfts","useTeam","fetchTeam","fetchTeams","differenceInMilliseconds","SecondaryCard","tertiary","defaultProps","textTransform","ceil","baseRandom","size","lastIndex","rand"],"mappings":"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","file":"static/js/8.f1fb1f14.chunk.js","sourcesContent":["var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","export const MINT_COST = 1\r\nexport const REGISTER_COST = 0.5\r\nexport const ALLOWANCE_MULTIPLIER = 5\r\nexport const STARTER_BUNNY_IDENTIFIERS = ['sleepy', 'dollop', 'twinkle', 'churro', 'sunny']\r\nexport const USERNAME_MIN_LENGTH = 3\r\nexport const USERNAME_MAX_LENGTH = 15\r\n","import React, { createContext, useEffect, useMemo, useReducer } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBunnyFactoryContract } from 'utils/contractHelpers'\r\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport { MINT_COST, REGISTER_COST, ALLOWANCE_MULTIPLIER } from '../config'\r\nimport { Actions, State, ContextType } from './types'\r\n\r\nconst totalCost = MINT_COST + REGISTER_COST\r\nconst allowance = totalCost * ALLOWANCE_MULTIPLIER\r\n\r\nconst initialState: State = {\r\n  isInitialized: false,\r\n  currentStep: 0,\r\n  teamId: null,\r\n  selectedNft: {\r\n    nftAddress: null,\r\n    tokenId: null,\r\n  },\r\n  userName: '',\r\n  minimumCakeRequired: new BigNumber(totalCost).multipliedBy(DEFAULT_TOKEN_DECIMAL),\r\n  allowance: new BigNumber(allowance).multipliedBy(DEFAULT_TOKEN_DECIMAL),\r\n}\r\n\r\nconst reducer = (state: State, action: Actions): State => {\r\n  switch (action.type) {\r\n    case 'initialize':\r\n      return {\r\n        ...state,\r\n        isInitialized: true,\r\n        currentStep: action.step,\r\n      }\r\n    case 'next_step':\r\n      return {\r\n        ...state,\r\n        currentStep: state.currentStep + 1,\r\n      }\r\n    case 'set_team':\r\n      return {\r\n        ...state,\r\n        teamId: action.teamId,\r\n      }\r\n    case 'set_selected_nft':\r\n      return {\r\n        ...state,\r\n        selectedNft: {\r\n          tokenId: action.tokenId,\r\n          nftAddress: action.nftAddress,\r\n        },\r\n      }\r\n    case 'set_username':\r\n      return {\r\n        ...state,\r\n        userName: action.userName,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const ProfileCreationContext = createContext<ContextType>(null)\r\n\r\nconst ProfileCreationProvider: React.FC = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const { account } = useWeb3React()\r\n\r\n  // Initial checks\r\n  useEffect(() => {\r\n    let isSubscribed = true\r\n\r\n    const fetchData = async () => {\r\n      const bunnyFactoryContract = getBunnyFactoryContract()\r\n      const canMint = await bunnyFactoryContract.canMint(account)\r\n      dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\r\n\r\n      // When changing wallets quickly unmounting before the hasClaim finished causes a React error\r\n      if (isSubscribed) {\r\n        dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchData()\r\n    }\r\n\r\n    return () => {\r\n      isSubscribed = false\r\n    }\r\n  }, [account, dispatch])\r\n\r\n  const actions: ContextType['actions'] = useMemo(\r\n    () => ({\r\n      nextStep: () => dispatch({ type: 'next_step' }),\r\n      setTeamId: (teamId: number) => dispatch({ type: 'set_team', teamId }),\r\n      setSelectedNft: (tokenId: number, nftAddress: string) =>\r\n        dispatch({ type: 'set_selected_nft', tokenId, nftAddress }),\r\n      setUserName: (userName: string) => dispatch({ type: 'set_username', userName }),\r\n    }),\r\n    [dispatch],\r\n  )\r\n\r\n  return <ProfileCreationContext.Provider value={{ ...state, actions }}>{children}</ProfileCreationContext.Provider>\r\n}\r\n\r\nexport default ProfileCreationProvider\r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Breadcrumbs, Heading, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\r\n\r\nconst Wrapper = styled.div`\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  margin-bottom: 24px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nconst steps = ['Get Starter Collectible', 'Set Profile Picture', 'Join Team', 'Set Name']\r\n\r\nconst Header: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const { currentStep } = useContext(ProfileCreationContext)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"8px\">\r\n        {t('Profile Setup')}\r\n      </Heading>\r\n      <Heading as=\"h2\" scale=\"lg\" mb=\"8px\">\r\n        {t('Show off your stats and collectibles with your unique profile')}\r\n      </Heading>\r\n      <Text color=\"textSubtle\" mb=\"24px\">\r\n        {t('Total cost: 1.5 CAKE')}\r\n      </Text>\r\n      <Breadcrumbs>\r\n        {steps.map((translationKey, index) => {\r\n          return (\r\n            <Text key={translationKey} color={index <= currentStep ? 'text' : 'textDisabled'}>\r\n              {t(translationKey)}\r\n            </Text>\r\n          )\r\n        })}\r\n      </Breadcrumbs>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Heading, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\n\r\nconst WalletNotConnected = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <div>\r\n      <Heading scale=\"xl\" mb=\"8px\">\r\n        {t('Oops!')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"16px\">\r\n        {t('Please connect your wallet to continue')}\r\n      </Text>\r\n      <ConnectWalletButton />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WalletNotConnected\r\n","import BigNumber from 'bignumber.js'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport useTokenBalance from './useTokenBalance'\r\n\r\n/**\r\n * A hook to check if a wallet's CAKE balance is at least the amount passed in\r\n */\r\nconst useHasCakeBalance = (minimumBalance: BigNumber) => {\r\n  const { balance: cakeBalance } = useTokenBalance(getCakeAddress())\r\n  return cakeBalance.gte(minimumBalance)\r\n}\r\n\r\nexport default useHasCakeBalance\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, Radio } from '@pancakeswap/uikit'\r\n\r\ninterface SelectionCardProps {\r\n  name: string\r\n  value: string | number\r\n  isChecked?: boolean\r\n  onChange: (val: any) => void\r\n  image: string\r\n  disabled?: boolean\r\n}\r\n\r\nconst Label = styled.label<{ isDisabled: boolean }>`\r\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  opacity: ${({ isDisabled }) => (isDisabled ? '0.6' : '1')};\r\n`\r\n\r\nconst Body = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-grow: 1;\r\n  height: 80px;\r\n  padding: 8px 16px;\r\n`\r\n\r\nconst Children = styled.div`\r\n  margin-left: 16px;\r\n`\r\n\r\nconst StyledBackgroundImage = styled.div<{ src: string }>`\r\n  align-self: stretch;\r\n  background-image: url('${({ src }) => src}');\r\n  background-size: contain;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  flex: none;\r\n  width: 80px;\r\n`\r\n\r\nconst SelectionCard: React.FC<SelectionCardProps> = ({\r\n  name,\r\n  value,\r\n  isChecked = false,\r\n  image,\r\n  onChange,\r\n  disabled,\r\n  children,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <Card isSuccess={isChecked} isDisabled={disabled} mb=\"16px\" {...props}>\r\n      <Label isDisabled={disabled}>\r\n        <Body>\r\n          <Radio\r\n            name={name}\r\n            checked={isChecked}\r\n            value={value}\r\n            onChange={(e) => onChange(e.target.value)}\r\n            disabled={disabled}\r\n            style={{ flex: 'none' }}\r\n          />\r\n          <Children>{children}</Children>\r\n        </Body>\r\n        <StyledBackgroundImage src={image} />\r\n      </Label>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SelectionCard\r\n","import React from 'react'\r\nimport { ArrowForwardIcon, Button, ButtonProps } from '@pancakeswap/uikit'\r\n\r\nconst NextStepButton: React.FC<ButtonProps> = (props) => {\r\n  return <Button endIcon={<ArrowForwardIcon color=\"currentColor\" />} {...props} />\r\n}\r\n\r\nexport default NextStepButton\r\n","import { useContext } from 'react'\r\nimport { ProfileCreationContext } from './ProfileCreationProvider'\r\n\r\nconst useProfileCreation = () => {\r\n  return useContext(ProfileCreationContext)\r\n}\r\n\r\nexport default useProfileCreation\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Card, CardBody, Heading, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport { useCake, useBunnyFactory } from 'hooks/useContract'\r\nimport { Nft } from 'config/constants/types'\r\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\r\nimport nftList from 'config/constants/nfts'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\nimport SelectionCard from '../components/SelectionCard'\r\nimport NextStepButton from '../components/NextStepButton'\r\nimport ApproveConfirmButtons from '../components/ApproveConfirmButtons'\r\nimport useProfileCreation from './contexts/hook'\r\nimport { MINT_COST, STARTER_BUNNY_IDENTIFIERS } from './config'\r\n\r\nconst nfts = nftList.filter((nft) => STARTER_BUNNY_IDENTIFIERS.includes(nft.identifier))\r\nconst minimumCakeBalanceToMint = new BigNumber(MINT_COST).multipliedBy(DEFAULT_TOKEN_DECIMAL)\r\n\r\nconst Mint: React.FC = () => {\r\n  const [variationId, setVariationId] = useState<Nft['variationId']>(null)\r\n  const { actions, minimumCakeRequired, allowance } = useProfileCreation()\r\n\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const bunnyFactoryContract = useBunnyFactory()\r\n  const { t } = useTranslation()\r\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeBalanceToMint)\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n\r\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\r\n    useApproveConfirmTransaction({\r\n      onRequiresApproval: async () => {\r\n        // TODO: Move this to a helper, this check will be probably be used many times\r\n        try {\r\n          const response = await cakeContract.allowance(account, bunnyFactoryContract.address)\r\n          const currentAllowance = new BigNumber(response.toString())\r\n          return currentAllowance.gte(minimumCakeRequired)\r\n        } catch (error) {\r\n          return false\r\n        }\r\n      },\r\n      onApprove: () => {\r\n        return callWithGasPrice(cakeContract, 'approve', [bunnyFactoryContract.address, allowance.toJSON()])\r\n      },\r\n      onConfirm: () => {\r\n        return callWithGasPrice(bunnyFactoryContract, 'mintNFT', [variationId])\r\n      },\r\n      onSuccess: () => actions.nextStep(),\r\n    })\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t('Step %num%', { num: 1 })}\r\n      </Text>\r\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\r\n        {t('Get Starter Collectible')}\r\n      </Heading>\r\n      <Text as=\"p\">{t('Every profile starts by making a “starter” collectible (NFT).')}</Text>\r\n      <Text as=\"p\">{t('This starter will also become your first profile picture.')}</Text>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {t('You can change your profile pic later if you get another approved Pancake Collectible.')}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Choose your Starter!')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\">\r\n            {t('Choose wisely: you can only ever make one starter collectible!')}\r\n          </Text>\r\n          <Text as=\"p\" mb=\"24px\" color=\"textSubtle\">\r\n            {t('Cost: %num% CAKE', { num: MINT_COST })}\r\n          </Text>\r\n          {nfts.map((nft) => {\r\n            const handleChange = (value: string) => setVariationId(Number(value))\r\n\r\n            return (\r\n              <SelectionCard\r\n                key={nft.identifier}\r\n                name=\"mintStarter\"\r\n                value={nft.variationId}\r\n                image={`/images/nfts/${nft.images.md}`}\r\n                isChecked={variationId === nft.variationId}\r\n                onChange={handleChange}\r\n                disabled={isApproving || isConfirming || isConfirmed || !hasMinimumCakeRequired}\r\n              >\r\n                <Text bold>{nft.name}</Text>\r\n              </SelectionCard>\r\n            )\r\n          })}\r\n          {!hasMinimumCakeRequired && (\r\n            <Text color=\"failure\" mb=\"16px\">\r\n              {t('A minimum of %num% CAKE is required', { num: MINT_COST })}\r\n            </Text>\r\n          )}\r\n          <ApproveConfirmButtons\r\n            isApproveDisabled={variationId === null || isConfirmed || isConfirming || isApproved}\r\n            isApproving={isApproving}\r\n            isConfirmDisabled={!isApproved || isConfirmed || !hasMinimumCakeRequired}\r\n            isConfirming={isConfirming}\r\n            onApprove={handleApprove}\r\n            onConfirm={handleConfirm}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={!isConfirmed}>\r\n        {t('Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Mint\r\n","import React, { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { AutoRenewIcon, Button, Card, CardBody, Heading, Skeleton, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { getAddressByType } from 'utils/collectibles'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport { getErc721Contract } from 'utils/contractHelpers'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useGetCollectibles } from 'state/collectibles/hooks'\r\nimport useToast from 'hooks/useToast'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\nimport SelectionCard from '../components/SelectionCard'\r\nimport NextStepButton from '../components/NextStepButton'\r\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\r\n\r\nconst Link = styled(RouterLink)`\r\n  color: ${({ theme }) => theme.colors.primary};\r\n`\r\n\r\nconst NftWrapper = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst ProfilePicture: React.FC = () => {\r\n  const { library } = useWeb3React()\r\n  const [isApproved, setIsApproved] = useState(false)\r\n  const [isApproving, setIsApproving] = useState(false)\r\n  const { selectedNft, actions } = useContext(ProfileCreationContext)\r\n\r\n  const { t } = useTranslation()\r\n  const { isLoading, nftsInWallet, tokenIds } = useGetCollectibles()\r\n  const { toastError } = useToast()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n\r\n  const handleApprove = async () => {\r\n    const contract = getErc721Contract(selectedNft.nftAddress, library.getSigner())\r\n    const tx = await callWithGasPrice(contract, 'approve', [getPancakeProfileAddress(), selectedNft.tokenId])\r\n    setIsApproving(true)\r\n    const receipt = await tx.wait()\r\n    if (receipt.status) {\r\n      setIsApproving(false)\r\n      setIsApproved(true)\r\n    } else {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setIsApproving(false)\r\n    }\r\n  }\r\n\r\n  if (!isLoading && nftsInWallet.length === 0) {\r\n    return (\r\n      <>\r\n        <Heading scale=\"xl\" mb=\"24px\">\r\n          {t('Oops!')}\r\n        </Heading>\r\n        <Text bold fontSize=\"20px\" mb=\"24px\">\r\n          {t('We couldn’t find any Pancake Collectibles in your wallet.')}\r\n        </Text>\r\n        <Text as=\"p\">\r\n          {t(\r\n            'You need a Pancake Collectible to finish setting up your profile. If you sold or transferred your starter collectible to another wallet, you’ll need to get it back or acquire a new one somehow. You can’t make a new starter with this wallet address.',\r\n          )}\r\n        </Text>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t('Step %num%', { num: 2 })}\r\n      </Text>\r\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\r\n        {t('Set Profile Picture')}\r\n      </Heading>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Choose collectible')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\">\r\n            {t('Choose a profile picture from the eligible collectibles (NFT) in your wallet, shown below.')}\r\n          </Text>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {t('Only approved Pancake Collectibles can be used.')}\r\n            <Link to=\"/collectibles\" style={{ marginLeft: '4px' }}>\r\n              {t('See the list >')}\r\n            </Link>\r\n          </Text>\r\n          <NftWrapper>\r\n            {isLoading ? (\r\n              <Skeleton height=\"80px\" mb=\"16px\" />\r\n            ) : (\r\n              nftsInWallet.map((walletNft) => {\r\n                const [firstTokenId] = tokenIds[walletNft.identifier]\r\n                const address = getAddressByType(walletNft.type)\r\n\r\n                return (\r\n                  <SelectionCard\r\n                    name=\"profilePicture\"\r\n                    key={walletNft.identifier}\r\n                    value={firstTokenId}\r\n                    image={`/images/nfts/${walletNft.images.md}`}\r\n                    isChecked={firstTokenId === selectedNft.tokenId}\r\n                    onChange={(value: string) => actions.setSelectedNft(parseInt(value, 10), address)}\r\n                  >\r\n                    <Text bold>{walletNft.name}</Text>\r\n                  </SelectionCard>\r\n                )\r\n              })\r\n            )}\r\n          </NftWrapper>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Allow collectible to be locked')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\r\n            {t(\r\n              \"The collectible you've chosen will be locked in a smart contract while it’s being used as your profile picture. Don't worry - you'll be able to get it back at any time.\",\r\n            )}\r\n          </Text>\r\n          <Button\r\n            isLoading={isApproving}\r\n            disabled={isApproved || isApproving || selectedNft.tokenId === null}\r\n            onClick={handleApprove}\r\n            endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\r\n            id=\"approveStarterCollectible\"\r\n          >\r\n            {t('Enable')}\r\n          </Button>\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={selectedNft.tokenId === null || !isApproved || isApproving}>\r\n        {t('Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfilePicture\r\n","import React, { useMemo } from 'react'\r\nimport { Card, CardBody, CommunityIcon, Flex, Heading, Text } from '@pancakeswap/uikit'\r\nimport shuffle from 'lodash/shuffle'\r\nimport { useTeams } from 'state/teams/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport SelectionCard from '../components/SelectionCard'\r\nimport NextStepButton from '../components/NextStepButton'\r\nimport useProfileCreation from './contexts/hook'\r\n\r\nconst Team: React.FC = () => {\r\n  const { teamId: currentTeamId, actions } = useProfileCreation()\r\n  const { t } = useTranslation()\r\n  const { teams } = useTeams()\r\n  const handleTeamSelection = (value: string) => actions.setTeamId(parseInt(value, 10))\r\n  const teamValues = useMemo(() => shuffle(Object.values(teams)), [teams])\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t('Step %num%', { num: 3 })}\r\n      </Text>\r\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\r\n        {t('Join a Team')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {t('It won’t be possible to undo the choice you make for the foreseeable future!')}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Join a Team')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {t(\r\n              'There’s currently no big difference between teams, and no benefit of joining one team over another for now. So pick whichever one you like!',\r\n            )}\r\n          </Text>\r\n          {teamValues &&\r\n            teamValues.map((team) => {\r\n              return (\r\n                <SelectionCard\r\n                  key={team.name}\r\n                  name=\"teams-selection\"\r\n                  value={team.id}\r\n                  isChecked={currentTeamId === team.id}\r\n                  image={`/images/teams/${team.images.md}`}\r\n                  onChange={handleTeamSelection}\r\n                  disabled={!team.isJoinable}\r\n                >\r\n                  <Text bold>{team.name}</Text>\r\n                  <Flex>\r\n                    <CommunityIcon mr=\"8px\" />\r\n                    <Text>{team.users.toLocaleString()}</Text>\r\n                  </Flex>\r\n                </SelectionCard>\r\n              )\r\n            })}\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={currentTeamId === null}>\r\n        {t('Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Team\r\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import toDate from \"../toDate/index.js\";\nimport endOfDay from \"../endOfDay/index.js\";\nimport endOfMonth from \"../endOfMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * var result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\n\nexport default function isLastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return endOfDay(date).getTime() === endOfMonth(date).getTime();\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarMonths from \"../differenceInCalendarMonths/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport isLastDayOfMonth from \"../isLastDayOfMonth/index.js\";\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  var result; // Check for the difference of less than month\n\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      dateLeft.setDate(30);\n    }\n\n    dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n\n    var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign; // Check for cases of one full calendar month\n\n    if (isLastDayOfMonth(toDate(dirtyDateLeft)) && difference === 1 && compareAsc(dirtyDateLeft, dateRight) === 1) {\n      isLastMonthNotFull = false;\n    }\n\n    result = sign * (difference - Number(isLastMonthNotFull));\n  } // Prevent negative zero\n\n\n  return result === 0 ? 0 : result;\n}","import assign from \"../assign/index.js\";\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}","import compareAsc from \"../compareAsc/index.js\";\nimport differenceInMonths from \"../differenceInMonths/index.js\";\nimport differenceInSeconds from \"../differenceInSeconds/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  requiredArgs(2, arguments);\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","import React, { ChangeEvent, useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Heading,\r\n  Text,\r\n  Input as UIKitInput,\r\n  Button,\r\n  AutoRenewIcon,\r\n  CheckmarkIcon,\r\n  Flex,\r\n  WarningIcon,\r\n  useModal,\r\n  Skeleton,\r\n  Checkbox,\r\n} from '@pancakeswap/uikit'\r\nimport { parseISO, formatDistance } from 'date-fns'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useToast from 'hooks/useToast'\r\nimport { signMessage } from 'utils/web3React'\r\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\r\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport debounce from 'lodash/debounce'\r\nimport ConfirmProfileCreationModal from '../components/ConfirmProfileCreationModal'\r\nimport useProfileCreation from './contexts/hook'\r\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config'\r\n\r\nenum ExistingUserState {\r\n  IDLE = 'idle', // initial state\r\n  CREATED = 'created', // username has already been created\r\n  NEW = 'new', // username has not been created\r\n}\r\n\r\nconst profileApiUrl = process.env.REACT_APP_API_PROFILE\r\nconst minimumCakeToRegister = new BigNumber(REGISTER_COST).multipliedBy(DEFAULT_TOKEN_DECIMAL)\r\n\r\nconst InputWrap = styled.div`\r\n  position: relative;\r\n  max-width: 240px;\r\n`\r\n\r\nconst Input = styled(UIKitInput)`\r\n  padding-right: 40px;\r\n`\r\n\r\nconst Indicator = styled(Flex)`\r\n  align-items: center;\r\n  height: 24px;\r\n  justify-content: center;\r\n  margin-top: -12px;\r\n  position: absolute;\r\n  right: 16px;\r\n  top: 50%;\r\n  width: 24px;\r\n`\r\n\r\nconst UserName: React.FC = () => {\r\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\r\n  const { teamId, selectedNft, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { toastError } = useToast()\r\n  const { library } = useWeb3Provider()\r\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.IDLE)\r\n  const [isValid, setIsValid] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeToRegister)\r\n  const [onPresentConfirmProfileCreation] = useModal(\r\n    <ConfirmProfileCreationModal\r\n      userName={userName}\r\n      selectedNft={selectedNft}\r\n      account={account}\r\n      teamId={teamId}\r\n      minimumCakeRequired={minimumCakeRequired}\r\n      allowance={allowance}\r\n    />,\r\n    false,\r\n  )\r\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\r\n\r\n  const checkUsernameValidity = debounce(async (value: string) => {\r\n    try {\r\n      setIsLoading(true)\r\n      const res = await fetch(`${profileApiUrl}/api/users/valid/${value}`)\r\n\r\n      if (res.ok) {\r\n        setIsValid(true)\r\n        setMessage('')\r\n      } else {\r\n        const data = await res.json()\r\n        setIsValid(false)\r\n        setMessage(data?.error?.message)\r\n      }\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }, 200)\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target\r\n    actions.setUserName(value)\r\n    checkUsernameValidity(value)\r\n  }\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n\r\n      const signature = await signMessage(library, account, userName)\r\n      const response = await fetch(`${profileApiUrl}/api/users/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          address: account,\r\n          username: userName,\r\n          signature,\r\n        }),\r\n      })\r\n\r\n      if (response.ok) {\r\n        setExistingUserState(ExistingUserState.CREATED)\r\n      } else {\r\n        const data = await response.json()\r\n        toastError(t('Error'), data?.error?.message)\r\n      }\r\n    } catch (error) {\r\n      toastError(error?.message ? error.message : JSON.stringify(error))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleAcknowledge = () => setIsAcknowledged(!isAcknowledged)\r\n\r\n  // Perform an initial check to see if the wallet has already created a username\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const response = await fetch(`${profileApiUrl}/api/users/${account}`)\r\n        const data = await response.json()\r\n\r\n        if (response.ok) {\r\n          const dateCreated = formatDistance(parseISO(data.created_at), new Date())\r\n          setMessage(t('Created %dateCreated% ago', { dateCreated }))\r\n\r\n          actions.setUserName(data.username)\r\n          setExistingUserState(ExistingUserState.CREATED)\r\n          setIsValid(true)\r\n        } else {\r\n          setExistingUserState(ExistingUserState.NEW)\r\n        }\r\n      } catch (error) {\r\n        toastError(t('Error'), t('Unable to verify username'))\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchUser()\r\n    }\r\n  }, [account, setExistingUserState, setIsValid, setMessage, actions, toastError, t])\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t('Step %num%', { num: 4 })}\r\n      </Text>\r\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\r\n        {t('Set Your Name')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {t('This name will be shown in team leaderboards and search results as long as your profile is active.')}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Set Your Name')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {t(\r\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You can’t change this once you click Confirm.',\r\n            )}\r\n          </Text>\r\n          {existingUserState === ExistingUserState.IDLE ? (\r\n            <Skeleton height=\"40px\" width=\"240px\" />\r\n          ) : (\r\n            <InputWrap>\r\n              <Input\r\n                onChange={handleChange}\r\n                isWarning={userName && !isValid}\r\n                isSuccess={userName && isValid}\r\n                minLength={USERNAME_MIN_LENGTH}\r\n                maxLength={USERNAME_MAX_LENGTH}\r\n                disabled={isUserCreated}\r\n                placeholder={t('Enter your name...')}\r\n                value={userName}\r\n              />\r\n              <Indicator>\r\n                {isLoading && <AutoRenewIcon spin />}\r\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\r\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\r\n              </Indicator>\r\n            </InputWrap>\r\n          )}\r\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\r\n            {message}\r\n          </Text>\r\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\r\n            {t(\r\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\r\n            )}\r\n          </Text>\r\n          <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\r\n            <Flex alignItems=\"center\">\r\n              <div style={{ flex: 'none' }}>\r\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknowledge} />\r\n              </div>\r\n              <Text ml=\"8px\">{t('I understand that people can view my wallet if they know my username')}</Text>\r\n            </Flex>\r\n          </label>\r\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\r\n            {t('Confirm')}\r\n          </Button>\r\n        </CardBody>\r\n      </Card>\r\n      <Button\r\n        onClick={onPresentConfirmProfileCreation}\r\n        disabled={!isValid || !isUserCreated}\r\n        id=\"completeProfileCreation\"\r\n      >\r\n        {t('Complete Profile')}\r\n      </Button>\r\n      {!hasMinimumCakeRequired && (\r\n        <Text color=\"failure\" mt=\"16px\">\r\n          {t('A minimum of %num% CAKE is required', { num: REGISTER_COST })}\r\n        </Text>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserName\r\n","import React from 'react'\r\nimport { Modal, Flex, Text } from '@pancakeswap/uikit'\r\nimport { useAppDispatch } from 'state'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCake, useProfile } from 'hooks/useContract'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { fetchProfile } from 'state/profile'\r\nimport useToast from 'hooks/useToast'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\nimport { ToastDescriptionWithTx } from 'components/Toast'\r\nimport { REGISTER_COST } from '../ProfileCreation/config'\r\nimport ApproveConfirmButtons from './ApproveConfirmButtons'\r\nimport { State } from '../ProfileCreation/contexts/types'\r\n\r\ninterface Props {\r\n  userName: string\r\n  selectedNft: State['selectedNft']\r\n  account: string\r\n  teamId: number\r\n  minimumCakeRequired: BigNumber\r\n  allowance: BigNumber\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst ConfirmProfileCreationModal: React.FC<Props> = ({\r\n  account,\r\n  teamId,\r\n  selectedNft,\r\n  minimumCakeRequired,\r\n  allowance,\r\n  onDismiss,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const profileContract = useProfile()\r\n  const dispatch = useAppDispatch()\r\n  const { toastSuccess } = useToast()\r\n  const cakeContract = useCake()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n\r\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\r\n    useApproveConfirmTransaction({\r\n      onRequiresApproval: async () => {\r\n        try {\r\n          const response = await cakeContract.allowance(account, profileContract.address)\r\n          const currentAllowance = new BigNumber(response.toString())\r\n          return currentAllowance.gte(minimumCakeRequired)\r\n        } catch (error) {\r\n          return false\r\n        }\r\n      },\r\n      onApprove: () => {\r\n        return callWithGasPrice(cakeContract, 'approve', [profileContract.address, allowance.toJSON()])\r\n      },\r\n      onConfirm: () => {\r\n        return callWithGasPrice(profileContract, 'createProfile', [teamId, selectedNft.nftAddress, selectedNft.tokenId])\r\n      },\r\n      onSuccess: async ({ receipt }) => {\r\n        await dispatch(fetchProfile(account))\r\n        onDismiss()\r\n        toastSuccess(t('Profile created!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\r\n      },\r\n    })\r\n\r\n  return (\r\n    <Modal title={t('Complete Profile')} onDismiss={onDismiss}>\r\n      <Text color=\"textSubtle\" mb=\"8px\">\r\n        {t('Submitting NFT to contract and confirming User Name and Team.')}\r\n      </Text>\r\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\r\n        <Text>{t('Cost')}</Text>\r\n        <Text>{t('%num% CAKE', { num: REGISTER_COST })}</Text>\r\n      </Flex>\r\n      <ApproveConfirmButtons\r\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\r\n        isApproving={isApproving}\r\n        isConfirmDisabled={!isApproved || isConfirmed}\r\n        isConfirming={isConfirming}\r\n        onApprove={handleApprove}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ConfirmProfileCreationModal\r\n","import { useReducer } from 'react'\r\n\r\nexport enum Views {\r\n  START = 'start',\r\n  CHANGE = 'change',\r\n  REMOVE = 'remove',\r\n  APPROVE = 'approve',\r\n}\r\n\r\nexport type Actions =\r\n  | {\r\n      type: 'set_view'\r\n      view: Views\r\n    }\r\n  | {\r\n      type: 'go_previous'\r\n    }\r\n\r\nexport interface State {\r\n  currentView: Views\r\n  previousView: Views | null\r\n}\r\n\r\nconst reducer = (state: State, action: Actions): State => {\r\n  switch (action.type) {\r\n    case 'set_view':\r\n      return {\r\n        ...state,\r\n        currentView: action.view,\r\n        previousView: state.currentView,\r\n      }\r\n    case 'go_previous':\r\n      return {\r\n        ...state,\r\n        currentView: state.previousView,\r\n        previousView: state.currentView,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport interface UseEditProfileResponse extends State {\r\n  goToStart: () => void\r\n  goToChange: () => void\r\n  goToApprove: () => void\r\n  goToRemove: () => void\r\n  goPrevious: () => void\r\n}\r\n\r\nconst useEditProfile = (): UseEditProfileResponse => {\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    currentView: Views.START,\r\n    previousView: null,\r\n  })\r\n\r\n  const goToStart = () => dispatch({ type: 'set_view', view: Views.START })\r\n  const goToChange = () => dispatch({ type: 'set_view', view: Views.CHANGE })\r\n  const goToRemove = () => dispatch({ type: 'set_view', view: Views.REMOVE })\r\n  const goToApprove = () => dispatch({ type: 'set_view', view: Views.APPROVE })\r\n  const goPrevious = () => dispatch({ type: 'go_previous' })\r\n\r\n  return { ...state, goToStart, goToChange, goToRemove, goToApprove, goPrevious }\r\n}\r\n\r\nexport default useEditProfile\r\n","import React, { useContext } from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport NoWalletConnected from '../components/WalletNotConnected'\r\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\r\nimport Mint from './Mint'\r\nimport ProfilePicture from './ProfilePicture'\r\nimport TeamSelection from './TeamSelection'\r\nimport UserName from './UserName'\r\n\r\nconst Steps = () => {\r\n  const { t } = useTranslation()\r\n  const { isInitialized, currentStep } = useContext(ProfileCreationContext)\r\n  const { account } = useWeb3React()\r\n\r\n  if (!account) {\r\n    return <NoWalletConnected />\r\n  }\r\n\r\n  if (!isInitialized) {\r\n    return <div>{t('Loading...')}</div>\r\n  }\r\n\r\n  if (currentStep === 0) {\r\n    return <Mint />\r\n  }\r\n\r\n  if (currentStep === 1) {\r\n    return <ProfilePicture />\r\n  }\r\n\r\n  if (currentStep === 2) {\r\n    return <TeamSelection />\r\n  }\r\n\r\n  if (currentStep === 3) {\r\n    return <UserName />\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport default Steps\r\n","import React from 'react'\r\nimport Page from 'components/Layout/Page'\r\nimport Header from './Header'\r\nimport ProfileCreationProvider from './contexts/ProfileCreationProvider'\r\nimport Steps from './Steps'\r\n\r\nconst ProfileCreation = () => (\r\n  <ProfileCreationProvider>\r\n    <Page>\r\n      <Header />\r\n      <Steps />\r\n    </Page>\r\n  </ProfileCreationProvider>\r\n)\r\n\r\nexport default ProfileCreation\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { Modal, Text, InjectedModalProps, Button, AutoRenewIcon } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useToast from 'hooks/useToast'\r\nimport { useClaimRefundContract } from 'hooks/useContract'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getClaimRefundContract } from 'utils/contractHelpers'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\nimport { ToastDescriptionWithTx } from 'components/Toast'\r\n\r\ninterface ClaimGiftProps extends InjectedModalProps {\r\n  onSuccess: () => void\r\n}\r\n\r\nexport const useCanClaim = () => {\r\n  const [canClaim, setCanClaim] = useState(false)\r\n  const [refresh, setRefresh] = useState(1)\r\n  const { account } = useWeb3React()\r\n\r\n  const checkClaimStatus = useCallback(() => {\r\n    setRefresh((prevRefresh) => prevRefresh + 1)\r\n  }, [setRefresh])\r\n\r\n  useEffect(() => {\r\n    const fetchClaimStatus = async () => {\r\n      const claimRefundContract = getClaimRefundContract()\r\n      try {\r\n        const walletCanClaim = await claimRefundContract.canClaim(account)\r\n        setCanClaim(walletCanClaim)\r\n      } catch (e) {\r\n        console.error(e)\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchClaimStatus()\r\n    }\r\n  }, [account, refresh, setCanClaim])\r\n\r\n  return { canClaim, checkClaimStatus }\r\n}\r\n\r\nconst ClaimGift: React.FC<ClaimGiftProps> = ({ onSuccess, onDismiss }) => {\r\n  const [isConfirming, setIsConfirming] = useState(false)\r\n  const { t } = useTranslation()\r\n  const { canClaim } = useCanClaim()\r\n  const claimRefundContract = useClaimRefundContract()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n\r\n  const handleClick = async () => {\r\n    const tx = await callWithGasPrice(claimRefundContract, 'getCakeBack')\r\n    setIsConfirming(true)\r\n    const receipt = await tx.wait()\r\n    if (receipt.status) {\r\n      toastSuccess(t('Success!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\r\n      onSuccess()\r\n      onDismiss()\r\n    } else {\r\n      setIsConfirming(false)\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal title={t('Claim your Gift!')} onDismiss={onDismiss}>\r\n      <div style={{ maxWidth: '640px' }}>\r\n        <Text as=\"p\">{t('Thank you for being a day-one user of Pancake Profiles!')}</Text>\r\n        <Text as=\"p\" mb=\"8px\">\r\n          {t(\r\n            \"If you haven't already noticed, we made a mistake and the starter bunny you chose got mixed up and changed into another bunny. Oops!\",\r\n          )}\r\n        </Text>\r\n        <Text as=\"p\">{t('To make it up to you, we’ll refund you the full 4 CAKE it cost to make your bunny.')}</Text>\r\n        <Text as=\"p\" mb=\"8px\">\r\n          {t('We’re also preparing an all-new collectible for you to claim (for free!) in the near future.')}\r\n        </Text>\r\n        <Text as=\"p\" mb=\"24px\">\r\n          {t(\r\n            'Once you claim the refund, you can make another account with another wallet, mint a new bunny, and send it to your main account via the NFT page.',\r\n          )}\r\n        </Text>\r\n        <Button\r\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          isLoading={isConfirming}\r\n          onClick={handleClick}\r\n          disabled={!canClaim}\r\n        >\r\n          {t('Claim Your CAKE')}\r\n        </Button>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ClaimGift\r\n","import { useEffect, useState } from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BigNumber from 'bignumber.js'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport profileABI from 'config/abi/pancakeProfile.json'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport useToast from 'hooks/useToast'\r\n\r\nconst useGetProfileCosts = () => {\r\n  const { t } = useTranslation()\r\n  const [costs, setCosts] = useState({\r\n    numberCakeToReactivate: BIG_ZERO,\r\n    numberCakeToRegister: BIG_ZERO,\r\n    numberCakeToUpdate: BIG_ZERO,\r\n  })\r\n  const { toastError } = useToast()\r\n\r\n  useEffect(() => {\r\n    const fetchCosts = async () => {\r\n      try {\r\n        const calls = ['numberCakeToReactivate', 'numberCakeToRegister', 'numberCakeToUpdate'].map((method) => ({\r\n          address: getPancakeProfileAddress(),\r\n          name: method,\r\n        }))\r\n        const [[numberCakeToReactivate], [numberCakeToRegister], [numberCakeToUpdate]] = await multicallv2(\r\n          profileABI,\r\n          calls,\r\n        )\r\n\r\n        setCosts({\r\n          numberCakeToReactivate: new BigNumber(numberCakeToReactivate.toString()),\r\n          numberCakeToRegister: new BigNumber(numberCakeToRegister.toString()),\r\n          numberCakeToUpdate: new BigNumber(numberCakeToUpdate.toString()),\r\n        })\r\n      } catch (error) {\r\n        toastError(t('Error'), t('Could not retrieve CAKE costs for profile'))\r\n      }\r\n    }\r\n\r\n    fetchCosts()\r\n  }, [setCosts, toastError, t])\r\n\r\n  return costs\r\n}\r\n\r\nexport default useGetProfileCosts\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Button, Flex, Text, InjectedModalProps } from '@pancakeswap/uikit'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport { useCake } from 'hooks/useContract'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\r\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { UseEditProfileResponse } from './reducer'\r\nimport ProfileAvatar from '../ProfileAvatar'\r\n\r\ninterface StartPageProps extends InjectedModalProps {\r\n  goToChange: UseEditProfileResponse['goToChange']\r\n  goToRemove: UseEditProfileResponse['goToRemove']\r\n  goToApprove: UseEditProfileResponse['goToApprove']\r\n}\r\n\r\nconst DangerOutline = styled(Button).attrs({ variant: 'secondary' })`\r\n  border-color: ${({ theme }) => theme.colors.failure};\r\n  color: ${({ theme }) => theme.colors.failure};\r\n  margin-bottom: 24px;\r\n\r\n  &:hover:not(:disabled):not(.button--disabled):not(:active) {\r\n    border-color: ${({ theme }) => theme.colors.failure};\r\n    opacity: 0.8;\r\n  }\r\n`\r\n\r\nconst AvatarWrapper = styled.div`\r\n  height: 64px;\r\n  width: 64px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 128px;\r\n    width: 128px;\r\n  }\r\n`\r\n\r\nconst StartPage: React.FC<StartPageProps> = ({ goToApprove, goToChange, goToRemove, onDismiss }) => {\r\n  const [needsApproval, setNeedsApproval] = useState(null)\r\n  const { profile } = useProfile()\r\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\r\n  const minimumCakeRequired = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\r\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeRequired)\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\r\n\r\n  /**\r\n   * Check if the wallet has the required CAKE allowance to change their profile pic or reactivate\r\n   * If they don't, we send them to the approval screen first\r\n   */\r\n  useEffect(() => {\r\n    const checkApprovalStatus = async () => {\r\n      const response = await cakeContract.allowance(account, getPancakeProfileAddress())\r\n      const currentAllowance = new BigNumber(response.toString())\r\n      setNeedsApproval(currentAllowance.lt(cost))\r\n    }\r\n\r\n    if (account) {\r\n      checkApprovalStatus()\r\n    }\r\n  }, [account, cost, setNeedsApproval, cakeContract])\r\n\r\n  if (!profile) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\r\n      <AvatarWrapper>\r\n        <ProfileAvatar profile={profile} />\r\n      </AvatarWrapper>\r\n      <Flex alignItems=\"center\" style={{ height: '48px' }} justifyContent=\"center\">\r\n        <Text as=\"p\" color=\"failure\">\r\n          {!hasMinimumCakeRequired &&\r\n            t('%minimum% CAKE required to change profile pic', { minimum: getFullDisplayBalance(minimumCakeRequired) })}\r\n        </Text>\r\n      </Flex>\r\n      {profile.isActive ? (\r\n        <>\r\n          <Button\r\n            width=\"100%\"\r\n            mb=\"8px\"\r\n            onClick={needsApproval === true ? goToApprove : goToChange}\r\n            disabled={!hasMinimumCakeRequired || needsApproval === null}\r\n          >\r\n            {t('Change Profile Pic')}\r\n          </Button>\r\n          <DangerOutline width=\"100%\" onClick={goToRemove}>\r\n            {t('Remove Profile Pic')}\r\n          </DangerOutline>\r\n        </>\r\n      ) : (\r\n        <Button\r\n          width=\"100%\"\r\n          mb=\"8px\"\r\n          onClick={needsApproval === true ? goToApprove : goToChange}\r\n          disabled={!hasMinimumCakeRequired || needsApproval === null}\r\n        >\r\n          {t('Reactivate Profile')}\r\n        </Button>\r\n      )}\r\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default StartPage\r\n","import React, { useState } from 'react'\r\nimport { AutoRenewIcon, Button, Checkbox, Flex, InjectedModalProps, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\r\nimport { useAppDispatch } from 'state'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { fetchProfile } from 'state/profile'\r\nimport useToast from 'hooks/useToast'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useProfile as useProfileContract } from 'hooks/useContract'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\nimport { ToastDescriptionWithTx } from 'components/Toast'\r\n\r\ntype PauseProfilePageProps = InjectedModalProps\r\n\r\nconst PauseProfilePage: React.FC<PauseProfilePageProps> = ({ onDismiss }) => {\r\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\r\n  const [isConfirming, setIsConfirming] = useState(false)\r\n  const { profile } = useProfile()\r\n  const { numberCakeToReactivate } = useGetProfileCosts()\r\n  const { t } = useTranslation()\r\n  const pancakeProfileContract = useProfileContract()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n  const { account } = useWeb3React()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const dispatch = useAppDispatch()\r\n\r\n  const handleChange = () => setIsAcknowledged(!isAcknowledged)\r\n\r\n  const handleDeactivateProfile = async () => {\r\n    const tx = await callWithGasPrice(pancakeProfileContract, 'pauseProfile')\r\n    setIsConfirming(true)\r\n    const receipt = await tx.wait()\r\n    if (receipt.status) {\r\n      // Re-fetch profile\r\n      await dispatch(fetchProfile(account))\r\n      toastSuccess(t('Profile Paused!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\r\n      onDismiss()\r\n    } else {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setIsConfirming(false)\r\n    }\r\n  }\r\n\r\n  if (!profile) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Text as=\"p\" color=\"failure\" mb=\"24px\">\r\n        {t('This will suspend your profile and send your Collectible back to your wallet')}\r\n      </Text>\r\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n        {t(\r\n          \"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\",\r\n        )}\r\n      </Text>\r\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n        {t('Cost to reactivate in the future: %cost% CAKE', { cost: getBalanceNumber(numberCakeToReactivate) })}\r\n      </Text>\r\n      <label htmlFor=\"acknowledgement\" style={{ cursor: 'pointer', display: 'block', marginBottom: '24px' }}>\r\n        <Flex alignItems=\"center\">\r\n          <Checkbox id=\"acknowledgement\" checked={isAcknowledged} onChange={handleChange} scale=\"sm\" />\r\n          <Text ml=\"8px\">{t('I understand')}</Text>\r\n        </Flex>\r\n      </label>\r\n      <Button\r\n        width=\"100%\"\r\n        isLoading={isConfirming}\r\n        endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        disabled={!isAcknowledged || isConfirming}\r\n        onClick={handleDeactivateProfile}\r\n        mb=\"8px\"\r\n      >\r\n        {t('Confirm')}\r\n      </Button>\r\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PauseProfilePage\r\n","import React, { useState } from 'react'\r\nimport { Button, InjectedModalProps, Skeleton, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { useGetCollectibles } from 'state/collectibles/hooks'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useToast from 'hooks/useToast'\r\nimport { fetchProfile } from 'state/profile'\r\nimport { getAddressByType } from 'utils/collectibles'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { getErc721Contract } from 'utils/contractHelpers'\r\nimport { useProfile as useProfileContract } from 'hooks/useContract'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport { ToastDescriptionWithTx } from 'components/Toast'\r\nimport SelectionCard from '../SelectionCard'\r\nimport ApproveConfirmButtons from '../ApproveConfirmButtons'\r\n\r\ntype ChangeProfilePicPageProps = InjectedModalProps\r\n\r\nconst ChangeProfilePicPage: React.FC<ChangeProfilePicPageProps> = ({ onDismiss }) => {\r\n  const [selectedNft, setSelectedNft] = useState({\r\n    tokenId: null,\r\n    nftAddress: null,\r\n  })\r\n  const { t } = useTranslation()\r\n  const { isLoading, tokenIds, nftsInWallet } = useGetCollectibles()\r\n  const dispatch = useAppDispatch()\r\n  const { profile } = useProfile()\r\n  const profileContract = useProfileContract()\r\n  const { account, library } = useWeb3React()\r\n  const { toastSuccess } = useToast()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n\r\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\r\n    useApproveConfirmTransaction({\r\n      onApprove: () => {\r\n        const contract = getErc721Contract(selectedNft.nftAddress, library.getSigner())\r\n        return callWithGasPrice(contract, 'approve', [getPancakeProfileAddress(), selectedNft.tokenId])\r\n      },\r\n      onConfirm: () => {\r\n        if (!profile.isActive) {\r\n          return callWithGasPrice(profileContract, 'reactivateProfile', [selectedNft.nftAddress, selectedNft.tokenId])\r\n        }\r\n\r\n        return callWithGasPrice(profileContract, 'updateProfile', [selectedNft.nftAddress, selectedNft.tokenId])\r\n      },\r\n      onSuccess: async ({ receipt }) => {\r\n        // Re-fetch profile\r\n        await dispatch(fetchProfile(account))\r\n        toastSuccess(t('Profile Updated!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\r\n\r\n        onDismiss()\r\n      },\r\n    })\r\n\r\n  return (\r\n    <>\r\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n        {t('Choose a new Collectible to use as your profile pic.')}\r\n      </Text>\r\n      {isLoading ? (\r\n        <Skeleton height=\"80px\" mb=\"16px\" />\r\n      ) : (\r\n        nftsInWallet.map((walletNft) => {\r\n          const [firstTokenId] = tokenIds[walletNft.identifier]\r\n          const handleChange = (value: string) => {\r\n            setSelectedNft({\r\n              tokenId: Number(value),\r\n              nftAddress: getAddressByType(walletNft.type),\r\n            })\r\n          }\r\n\r\n          return (\r\n            <SelectionCard\r\n              name=\"profilePicture\"\r\n              key={walletNft.identifier}\r\n              value={firstTokenId}\r\n              image={`/images/nfts/${walletNft.images.md}`}\r\n              isChecked={firstTokenId === selectedNft.tokenId}\r\n              onChange={handleChange}\r\n              disabled={isApproving || isConfirming || isConfirmed}\r\n            >\r\n              <Text bold>{walletNft.name}</Text>\r\n            </SelectionCard>\r\n          )\r\n        })\r\n      )}\r\n      {!isLoading && nftsInWallet.length === 0 && (\r\n        <>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\r\n            {t('Sorry! You don’t have any eligible Collectibles in your wallet to use!')}\r\n          </Text>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {t('Make sure you have a Pancake Collectible in your wallet and try again!')}\r\n          </Text>\r\n        </>\r\n      )}\r\n      <ApproveConfirmButtons\r\n        isApproveDisabled={isConfirmed || isConfirming || isApproved || selectedNft.tokenId === null}\r\n        isApproving={isApproving}\r\n        isConfirmDisabled={!isApproved || isConfirmed || selectedNft.tokenId === null}\r\n        isConfirming={isConfirming}\r\n        onApprove={handleApprove}\r\n        onConfirm={handleConfirm}\r\n      />\r\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving || isConfirming}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ChangeProfilePicPage\r\n","import React, { useState } from 'react'\r\nimport { AutoRenewIcon, Button, Flex, InjectedModalProps, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCake } from 'hooks/useContract'\r\nimport useToast from 'hooks/useToast'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\r\nimport { UseEditProfileResponse } from './reducer'\r\n\r\ninterface ApproveCakePageProps extends InjectedModalProps {\r\n  goToChange: UseEditProfileResponse['goToChange']\r\n}\r\n\r\nconst ApproveCakePage: React.FC<ApproveCakePageProps> = ({ goToChange, onDismiss }) => {\r\n  const [isApproving, setIsApproving] = useState(false)\r\n  const { profile } = useProfile()\r\n  const { t } = useTranslation()\r\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\r\n  const cakeContract = useCake()\r\n  const { toastError } = useToast()\r\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\r\n\r\n  const handleApprove = async () => {\r\n    const tx = await cakeContract.approve(getPancakeProfileAddress(), cost.times(2).toJSON())\r\n    setIsApproving(true)\r\n    const receipt = await tx.wait()\r\n    if (receipt.status) {\r\n      goToChange()\r\n    } else {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setIsApproving(false)\r\n    }\r\n  }\r\n\r\n  if (!profile) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\r\n        <Text>{profile.isActive ? t('Cost to update:') : t('Cost to reactivate:')}</Text>\r\n        <Text>{getFullDisplayBalance(cost)} CAKE</Text>\r\n      </Flex>\r\n      <Button\r\n        disabled={isApproving}\r\n        isLoading={isApproving}\r\n        endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        width=\"100%\"\r\n        mb=\"8px\"\r\n        onClick={handleApprove}\r\n      >\r\n        {t('Enable')}\r\n      </Button>\r\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default ApproveCakePage\r\n","import React from 'react'\r\nimport { InjectedModalProps, Modal } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useEditProfile, { Views } from './reducer'\r\nimport StartView from './StartView'\r\nimport PauseProfileView from './PauseProfileView'\r\nimport ChangeProfilePicView from './ChangeProfilePicView'\r\nimport ApproveCakeView from './ApproveCakeView'\r\n\r\ntype EditProfileModalProps = InjectedModalProps\r\n\r\nconst viewTitle = {\r\n  [Views.START]: 'Edit Profile',\r\n  [Views.CHANGE]: 'Change Profile Pic',\r\n  [Views.REMOVE]: 'Remove Profile Pic',\r\n  [Views.APPROVE]: 'Enable CAKE',\r\n}\r\n\r\nconst EditProfileModal: React.FC<EditProfileModalProps> = ({ onDismiss }) => {\r\n  const { currentView, goToChange, goToRemove, goToApprove, goPrevious } = useEditProfile()\r\n  const { t } = useTranslation()\r\n  const translationKey = viewTitle[currentView]\r\n\r\n  const isStartView = currentView === Views.START\r\n  const handleBack = isStartView ? null : () => goPrevious()\r\n\r\n  return (\r\n    <Modal title={t(translationKey)} onBack={handleBack} onDismiss={onDismiss} hideCloseButton={!isStartView}>\r\n      <div style={{ maxWidth: '400px' }}>\r\n        {currentView === Views.START && (\r\n          <StartView goToApprove={goToApprove} goToChange={goToChange} goToRemove={goToRemove} onDismiss={onDismiss} />\r\n        )}\r\n        {currentView === Views.REMOVE && <PauseProfileView onDismiss={onDismiss} />}\r\n        {currentView === Views.CHANGE && <ChangeProfilePicView onDismiss={onDismiss} />}\r\n        {currentView === Views.APPROVE && <ApproveCakeView goToChange={goToChange} onDismiss={onDismiss} />}\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default EditProfileModal\r\n","import React from 'react'\r\nimport { Button, Flex, Heading, useModal, PresentWonIcon } from '@pancakeswap/uikit'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ClaimNftAndCakeModal, { useCanClaim } from './ClaimGiftModal'\r\nimport HeaderWrapper from './HeaderWrapper'\r\nimport EditProfileModal from './EditProfileModal'\r\n\r\nconst ProfileHeader = () => {\r\n  const { t } = useTranslation()\r\n  const { canClaim, checkClaimStatus } = useCanClaim()\r\n  const [onPresentClaimGiftModal] = useModal(<ClaimNftAndCakeModal onSuccess={checkClaimStatus} />)\r\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\r\n  const { hasProfile } = useProfile()\r\n\r\n  return (\r\n    <HeaderWrapper>\r\n      <Flex\r\n        flexDirection={['column', null, 'row']}\r\n        alignItems={['start', null, 'center']}\r\n        justifyContent=\"space-between\"\r\n      >\r\n        <div>\r\n          <Heading as=\"h1\" scale=\"xxl\" mb=\"8px\" color=\"secondary\">\r\n            {t('Your Profile')}\r\n          </Heading>\r\n          <Heading as=\"h2\" scale=\"lg\" mb=\"16px\">\r\n            {t('Check your stats and collect achievements')}\r\n          </Heading>\r\n          {hasProfile && <Button onClick={onEditProfileModal}>{t('Edit Profile')}</Button>}\r\n        </div>\r\n        {canClaim && (\r\n          <Button variant=\"tertiary\" onClick={onPresentClaimGiftModal} startIcon={<PresentWonIcon />}>\r\n            {t('You’ve got a gift to claim!')}\r\n          </Button>\r\n        )}\r\n      </Flex>\r\n    </HeaderWrapper>\r\n  )\r\n}\r\n\r\nexport default ProfileHeader\r\n","import React, { ImgHTMLAttributes } from 'react'\r\nimport styled from 'styled-components'\r\nimport { BunnyPlaceholderIcon } from '@pancakeswap/uikit'\r\n\r\ninterface AchievementAvatarProps extends ImgHTMLAttributes<HTMLImageElement> {\r\n  badge?: string\r\n}\r\n\r\nconst NoBadgePlaceholder = styled(BunnyPlaceholderIcon)`\r\n  height: 48px;\r\n  width: 48px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 64px;\r\n    width: 64px;\r\n  }\r\n`\r\n\r\nconst StyledAchievementAvatar = styled.img`\r\n  height: 48px;\r\n  width: 48px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 64px;\r\n    width: 64px;\r\n  }\r\n`\r\n\r\nconst AchievementAvatar: React.FC<AchievementAvatarProps> = ({ badge, ...props }) => {\r\n  if (!badge) {\r\n    return <NoBadgePlaceholder />\r\n  }\r\n\r\n  return <StyledAchievementAvatar src={`/images/achievements/${badge}`} alt=\"achievement badge\" {...props} />\r\n}\r\n\r\nexport default AchievementAvatar\r\n","import React from 'react'\r\nimport { Text, TextProps } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { TranslatableText as AchievementTitleType } from 'state/types'\r\n\r\ninterface AchievementTitleProps extends TextProps {\r\n  title: AchievementTitleType\r\n}\r\n\r\nconst AchievementTitle: React.FC<AchievementTitleProps> = ({ title, ...props }) => {\r\n  const { t } = useTranslation()\r\n\r\n  if (typeof title === 'string') {\r\n    return (\r\n      <Text bold {...props}>\r\n        {title}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  const { key, data = {} } = title\r\n\r\n  return (\r\n    <Text bold {...props}>\r\n      {t(key, data)}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default AchievementTitle\r\n","import React from 'react'\r\nimport { Text, TextProps } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { TranslatableText as AchievementDescriptionType } from 'state/types'\r\nimport styled from 'styled-components'\r\n\r\ninterface AchievementDescriptionProps extends TextProps {\r\n  description?: AchievementDescriptionType\r\n}\r\n\r\nconst Description = styled(Text).attrs({ as: 'p', fontSize: '14px' })`\r\n  display: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst AchievementDescription: React.FC<AchievementDescriptionProps> = ({ description, ...props }) => {\r\n  const { t } = useTranslation()\r\n\r\n  if (!description) {\r\n    return null\r\n  }\r\n\r\n  if (typeof description === 'string') {\r\n    return (\r\n      <Text as=\"p\" color=\"textSubtle\" fontSize=\"14px\" {...props}>\r\n        {description}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  const { key, data = {} } = description\r\n\r\n  return (\r\n    <Description color=\"textSubtle\" {...props}>\r\n      {t(key, data)}\r\n    </Description>\r\n  )\r\n}\r\n\r\nexport default AchievementDescription\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, PrizeIcon, Text } from '@pancakeswap/uikit'\r\nimport { Achievement } from 'state/types'\r\nimport AchievementAvatar from './AchievementAvatar'\r\nimport AchievementTitle from './AchievementTitle'\r\nimport AchievementDescription from './AchievementDescription'\r\n\r\ninterface AchievementCardProps {\r\n  achievement: Achievement\r\n}\r\n\r\nconst Details = styled(Flex)`\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding-left: 8px;\r\n  padding-right: 8px;\r\n`\r\n\r\nconst AchievementCard: React.FC<AchievementCardProps> = ({ achievement }) => {\r\n  return (\r\n    <Flex>\r\n      <AchievementAvatar badge={achievement.badge} />\r\n      <Details>\r\n        <AchievementTitle title={achievement.title} />\r\n        <AchievementDescription description={achievement.description} />\r\n      </Details>\r\n      <Flex alignItems=\"center\">\r\n        <PrizeIcon width=\"18px\" color=\"textSubtle\" mr=\"4px\" />\r\n        <Text color=\"textSubtle\">{achievement.points.toLocaleString()}</Text>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default AchievementCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useAchievements } from 'state/achievements/hooks'\r\nimport AchievementCard from './AchievementCard'\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-gap: 16px;\r\n  grid-template-columns: 1fr;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n`\r\n\r\nconst AchievementsList = () => {\r\n  const { t } = useTranslation()\r\n  const achievements = useAchievements()\r\n\r\n  return (\r\n    <>\r\n      <Grid>\r\n        {achievements.map((achievement) => (\r\n          <AchievementCard key={achievement.id} achievement={achievement} />\r\n        ))}\r\n      </Grid>\r\n      {achievements.length === 0 && (\r\n        <Flex alignItems=\"center\" justifyContent=\"center\" style={{ height: '64px' }}>\r\n          <Heading as=\"h5\" scale=\"md\" color=\"textDisabled\">\r\n            {t('No achievements yet!')}\r\n          </Heading>\r\n        </Flex>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AchievementsList\r\n","import { useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport { State, AchievementState } from '../types'\r\nimport { fetchAchievements } from '.'\r\n\r\nexport const useFetchAchievements = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchAchievements(account))\r\n    }\r\n  }, [account, dispatch])\r\n}\r\n\r\nexport const useAchievements = () => {\r\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\r\n  return achievements\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst ActionColumn = styled.div`\r\n  flex: none;\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    max-width: 160px;\r\n\r\n    & > button {\r\n      width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nexport default ActionColumn\r\n","import React from 'react'\r\nimport { Flex, FlexProps, PrizeIcon, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface PointsLabelProps extends FlexProps {\r\n  points: number\r\n}\r\n\r\nconst PointsLabel: React.FC<PointsLabelProps> = ({ points, ...props }) => {\r\n  const { t } = useTranslation()\r\n  const localePoints = points.toLocaleString()\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" {...props}>\r\n      <PrizeIcon mr=\"4px\" color=\"textSubtle\" />\r\n      <Text color=\"textSubtle\">{t('%num% points', { num: localePoints })}</Text>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default PointsLabel\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { AutoRenewIcon, Button, Flex } from '@pancakeswap/uikit'\r\nimport { Achievement } from 'state/types'\r\nimport useToast from 'hooks/useToast'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { usePointCenterIfoContract } from 'hooks/useContract'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\nimport { ToastDescriptionWithTx } from 'components/Toast'\r\nimport ActionColumn from '../ActionColumn'\r\nimport PointsLabel from './PointsLabel'\r\nimport AchievementTitle from '../AchievementTitle'\r\nimport AchievementAvatar from '../AchievementAvatar'\r\nimport AchievementDescription from '../AchievementDescription'\r\n\r\ninterface AchievementRowProps {\r\n  achievement: Achievement\r\n  onCollectSuccess?: (achievement: Achievement) => void\r\n}\r\n\r\nconst StyledAchievementRow = styled(Flex)`\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  padding-bottom: 16px;\r\n  padding-top: 16px;\r\n`\r\n\r\nconst Details = styled.div`\r\n  flex: 1;\r\n`\r\n\r\nconst Body = styled(Flex)`\r\n  flex-direction: column;\r\n  flex: 1;\r\n  margin-left: 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    align-items: center;\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst AchievementRow: React.FC<AchievementRowProps> = ({ achievement, onCollectSuccess }) => {\r\n  const [isCollecting, setIsCollecting] = useState(false)\r\n  const { t } = useTranslation()\r\n  const pointCenterContract = usePointCenterIfoContract()\r\n  const { toastError, toastSuccess } = useToast()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n\r\n  const handleCollectPoints = async () => {\r\n    const tx = await callWithGasPrice(pointCenterContract, 'getPoints', [achievement.address])\r\n    setIsCollecting(true)\r\n    const receipt = await tx.wait()\r\n    if (receipt.status) {\r\n      setIsCollecting(false)\r\n      onCollectSuccess(achievement)\r\n      toastSuccess(t('Points Collected!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\r\n    } else {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setIsCollecting(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <StyledAchievementRow>\r\n      <AchievementAvatar badge={achievement.badge} />\r\n      <Body>\r\n        <Details>\r\n          <AchievementTitle title={achievement.title} />\r\n          <AchievementDescription description={achievement.description} />\r\n        </Details>\r\n        <PointsLabel points={achievement.points} px={[0, null, null, '32px']} mb={['16px', null, null, 0]} />\r\n        <ActionColumn>\r\n          <Button\r\n            onClick={handleCollectPoints}\r\n            isLoading={isCollecting}\r\n            endIcon={isCollecting ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n            disabled={isCollecting}\r\n            variant=\"secondary\"\r\n          >\r\n            {t('Collect')}\r\n          </Button>\r\n        </ActionColumn>\r\n      </Body>\r\n    </StyledAchievementRow>\r\n  )\r\n}\r\n\r\nexport default AchievementRow\r\n","import React, { useEffect, useState } from 'react'\r\nimport { sumBy } from 'lodash'\r\nimport { useAppDispatch } from 'state'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Card, CardBody, CardHeader, Flex, Heading, PrizeIcon } from '@pancakeswap/uikit'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { Achievement } from 'state/types'\r\nimport { addPoints } from 'state/profile'\r\nimport { addAchievement } from 'state/achievements'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getClaimableIfoData } from 'utils/achievements'\r\nimport AchievementRow from './AchievementRow'\r\n\r\nconst ClaimPointsCallout = () => {\r\n  const [claimableAchievements, setClaimableAchievement] = useState<Achievement[]>([])\r\n  const { t } = useTranslation()\r\n  const dispatch = useAppDispatch()\r\n  const { profile } = useProfile()\r\n  const { account } = useWeb3React()\r\n\r\n  useEffect(() => {\r\n    const fetchIfoClaims = async () => {\r\n      const ifoData = await getClaimableIfoData(account)\r\n      setClaimableAchievement(ifoData)\r\n    }\r\n\r\n    if (account) {\r\n      fetchIfoClaims()\r\n    }\r\n  }, [account, dispatch, setClaimableAchievement])\r\n\r\n  const handleCollectSuccess = (achievement: Achievement) => {\r\n    dispatch(addAchievement(achievement))\r\n    dispatch(addPoints(achievement.points))\r\n\r\n    setClaimableAchievement((prevClaimableAchievements) =>\r\n      prevClaimableAchievements.filter((prevClaimableAchievement) => prevClaimableAchievement.id !== achievement.id),\r\n    )\r\n  }\r\n\r\n  if (!profile?.isActive) {\r\n    return null\r\n  }\r\n\r\n  if (claimableAchievements.length === 0) {\r\n    return null\r\n  }\r\n\r\n  const totalPointsToCollect = sumBy(claimableAchievements, 'points')\r\n\r\n  return (\r\n    <Card isActive mb=\"32px\">\r\n      <CardHeader>\r\n        <Flex flexDirection={['column', null, 'row']} justifyContent={['start', null, 'space-between']}>\r\n          <Flex alignItems=\"center\" mb={['16px', null, 0]}>\r\n            <PrizeIcon width=\"32px\" mr=\"8px\" />\r\n            <Heading scale=\"lg\">{t('%num% Points to Collect', { num: totalPointsToCollect })}</Heading>\r\n          </Flex>\r\n        </Flex>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {claimableAchievements.map((achievement) => (\r\n          <AchievementRow key={achievement.address} achievement={achievement} onCollectSuccess={handleCollectSuccess} />\r\n        ))}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ClaimPointsCallout\r\n","import { useTranslation } from 'contexts/Localization'\r\nimport React from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { ChevronLeftIcon, Flex, Text, ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\r\n\r\ninterface MenuProps {\r\n  activeIndex?: number\r\n}\r\n\r\nconst Menu: React.FC<MenuProps> = ({ activeIndex = 0 }) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <>\r\n      <Flex mb=\"24px\">\r\n        <RouterLink to=\"/teams\">\r\n          <Flex alignItems=\"center\">\r\n            <ChevronLeftIcon color=\"primary\" />\r\n            <Text color=\"primary\">{t('Teams Overview')}</Text>\r\n          </Flex>\r\n        </RouterLink>\r\n      </Flex>\r\n\r\n      <Flex mb=\"24px\" justifyContent=\"center\">\r\n        <ButtonMenu activeIndex={activeIndex} variant=\"subtle\" scale=\"sm\">\r\n          <ButtonMenuItem as={RouterLink} to=\"/profile/tasks\">\r\n            {t('Task Center')}\r\n          </ButtonMenuItem>\r\n          <ButtonMenuItem as={RouterLink} to=\"/profile\">\r\n            {t('Public Profile')}\r\n          </ButtonMenuItem>\r\n        </ButtonMenu>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react'\r\nimport { Card, CardBody, CardHeader, Flex, Heading, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport AchievementsList from './components/AchievementsList'\r\nimport ClaimPointsCallout from './components/ClaimPointsCallout '\r\nimport ComingSoon from './components/ComingSoon'\r\nimport Menu from './components/Menu'\r\n\r\nconst TaskCenter = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <>\r\n      <Menu />\r\n      <ClaimPointsCallout />\r\n      <Card mb=\"32px\">\r\n        <CardHeader>\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n            <div>\r\n              <Heading scale=\"lg\" mb=\"8px\">\r\n                {t('Achievements')}\r\n              </Heading>\r\n              <Text as=\"p\">{t('Earn more points for completing larger quests!')}</Text>\r\n            </div>\r\n          </Flex>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <AchievementsList />\r\n        </CardBody>\r\n      </Card>\r\n      <Card mb=\"32px\">\r\n        <CardHeader>\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n            <div>\r\n              <Heading scale=\"lg\" mb=\"8px\">\r\n                {t('Task Center')}\r\n              </Heading>\r\n              <Text as=\"p\">{t('Earn points by completing regular tasks!')}</Text>\r\n              <Text as=\"p\">{t('Collecting points for these tasks makes them available again.')}</Text>\r\n            </div>\r\n          </Flex>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <ComingSoon />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TaskCenter\r\n","import styled, { DefaultTheme } from 'styled-components'\r\nimport { CardHeader as UIKitCardHeader } from '@pancakeswap/uikit'\r\n\r\nconst getBackground = (theme: DefaultTheme) => {\r\n  if (theme.isDark) {\r\n    return 'linear-gradient(139.73deg, #142339 0%, #24243D 47.4%, #37273F 100%)'\r\n  }\r\n\r\n  return 'linear-gradient(139.73deg, #E6FDFF 0%, #EFF4F5 46.87%, #F3EFFF 100%)'\r\n}\r\n\r\nconst CardHeader = styled(UIKitCardHeader)`\r\n  background: ${({ theme }) => getBackground(theme)};\r\n  position: relative;\r\n`\r\n\r\nexport default CardHeader\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { Nft } from 'config/constants/types'\r\n\r\ninterface CollectibleCardProps {\r\n  nft: Nft\r\n}\r\n\r\nconst PreviewImage = styled.img`\r\n  border-radius: 4px;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst CollectibleCard: React.FC<CollectibleCardProps> = ({ nft }) => {\r\n  return (\r\n    <div>\r\n      <PreviewImage src={`/images/nfts/${nft.images.lg}`} />\r\n      <Text bold mb=\"8px\">\r\n        {nft.name}\r\n      </Text>\r\n      <Text as=\"p\" fontSize=\"12px\" color=\"textSubtle\">\r\n        {nft.description}\r\n      </Text>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CollectibleCard\r\n","import React from 'react'\r\nimport { Heading, Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\r\nimport { Link } from 'react-router-dom'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useGetCollectibles } from 'state/collectibles/hooks'\r\nimport styled from 'styled-components'\r\nimport CollectibleCard from './CollectibleCard'\r\n\r\nconst CollectibleList = styled.div`\r\n  display: grid;\r\n  grid-gap: 16px;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  padding: 16px 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-gap: 24px;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    padding: 24px 0;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-template-columns: repeat(4, 1fr);\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    grid-template-columns: repeat(5, 1fr);\r\n  }\r\n`\r\n\r\nconst Collectibles = () => {\r\n  const { t } = useTranslation()\r\n  const { nftsInWallet } = useGetCollectibles()\r\n\r\n  return (\r\n    <>\r\n      <Heading as=\"h4\" scale=\"md\" mb=\"8px\">\r\n        {t('Pancake Collectibles')}\r\n      </Heading>\r\n      <Text as=\"p\">\r\n        {t('Pancake Collectibles are special ERC-721 NFTs that can be used on the PancakeSwap platform.')}\r\n      </Text>\r\n      <Text as=\"p\">\r\n        {t('NFTs in this user’s wallet that aren’t approved Pancake Collectibles won’t be shown here.')}\r\n      </Text>\r\n      {nftsInWallet.length > 0 && (\r\n        <CollectibleList>\r\n          {nftsInWallet.map((nftInWallet) => (\r\n            <CollectibleCard key={nftInWallet.identifier} nft={nftInWallet} />\r\n          ))}\r\n        </CollectibleList>\r\n      )}\r\n      {nftsInWallet.length === 0 && (\r\n        <Flex justifyContent=\"center\" p=\"32px\">\r\n          <Text fontSize=\"20px\" bold color=\"textDisabled\">\r\n            {t('No NFTs Found')}\r\n          </Text>\r\n        </Flex>\r\n      )}\r\n      <Flex alignItems=\"center\" justifyContent=\"flex-end\">\r\n        <Link to=\"/collectibles\">{t('See all approved Pancake Collectibles')}</Link>\r\n        <ChevronRightIcon />\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Collectibles\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useModal } from '@pancakeswap/uikit'\r\nimport EditProfileModal from './EditProfileModal'\r\nimport ProfileAvatar, { ProfileAvatarProps } from './ProfileAvatar'\r\n\r\nconst EditOverlay = styled.div`\r\n  background: rgba(0, 0, 0, 0.6) url('/images/camera.svg') no-repeat center center;\r\n  background-size: 24px;\r\n  border-radius: 50%;\r\n  left: 0;\r\n  height: 100%;\r\n  opacity: 0;\r\n  position: absolute;\r\n  top: 0;\r\n  transition: opacity 300ms;\r\n  width: 100%;\r\n  z-index: 3;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    background-size: 48px;\r\n  }\r\n`\r\n\r\nconst StyledEditProfileAvatar = styled.div`\r\n  position: relative;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n\r\n    ${EditOverlay} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`\r\n\r\nconst AvatarWrapper = styled.div`\r\n  height: 64px;\r\n  width: 64px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 128px;\r\n    width: 128px;\r\n  }\r\n`\r\n\r\nconst EditProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\r\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\r\n\r\n  return (\r\n    <StyledEditProfileAvatar onClick={onEditProfileModal}>\r\n      <AvatarWrapper>\r\n        <ProfileAvatar profile={profile} />\r\n      </AvatarWrapper>\r\n      <EditOverlay />\r\n    </StyledEditProfileAvatar>\r\n  )\r\n}\r\n\r\nexport default EditProfileAvatar\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CheckmarkCircleIcon,\r\n  Flex,\r\n  Heading,\r\n  Link,\r\n  Tag,\r\n  Text,\r\n  PrizeIcon,\r\n  OpenNewIcon,\r\n  BlockIcon,\r\n  VisibilityOn,\r\n  VisibilityOff,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport usePersistState from 'hooks/usePersistState'\r\nimport { getBscScanLink } from 'utils'\r\nimport Menu from './components/Menu'\r\nimport CardHeader from './components/CardHeader'\r\nimport Collectibles from './components/Collectibles'\r\nimport WalletNotConnected from './components/WalletNotConnected'\r\nimport StatBox from './components/StatBox'\r\nimport EditProfileAvatar from './components/EditProfileAvatar'\r\nimport AchievementsList from './components/AchievementsList'\r\n\r\nconst Content = styled.div`\r\n  flex: 1;\r\n  padding: 16px 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding: 0 16px;\r\n  }\r\n`\r\n\r\nconst Username = styled(Heading)`\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n  margin-bottom: 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    font-size: 40px;\r\n    line-height: 44px;\r\n  }\r\n`\r\n\r\nconst Status = styled.div`\r\n  position: absolute;\r\n  right: 24px;\r\n  top: 24px;\r\n`\r\n\r\nconst ResponsiveText = styled(Text)`\r\n  font-size: 12px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    font-size: 16px;\r\n  }\r\n`\r\n\r\nconst AddressLink = styled(Link)`\r\n  display: inline-block;\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  width: 80px;\r\n  white-space: nowrap;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    font-size: 16px;\r\n    width: auto;\r\n  }\r\n`\r\n\r\nconst Section = styled.div`\r\n  margin-bottom: 40px;\r\n`\r\n\r\nconst PublicProfile = () => {\r\n  const { account } = useWeb3React()\r\n  const { profile } = useProfile()\r\n  const [usernameVisibilityToggled, setUsernameVisibility] = usePersistState(false, {\r\n    localStorageKey: 'username_visibility_toggled',\r\n  })\r\n  const { t } = useTranslation()\r\n\r\n  if (!account) {\r\n    return <WalletNotConnected />\r\n  }\r\n\r\n  const toggleUsernameVisibility = () => {\r\n    setUsernameVisibility(!usernameVisibilityToggled)\r\n  }\r\n\r\n  const { username, team, isActive, points } = profile\r\n\r\n  const Icon = usernameVisibilityToggled ? VisibilityOff : VisibilityOn\r\n\r\n  return (\r\n    <>\r\n      <Menu activeIndex={1} />\r\n      <div>\r\n        <Card>\r\n          <CardHeader>\r\n            <Flex alignItems={['start', null, 'center']} flexDirection={['column', null, 'row']}>\r\n              <EditProfileAvatar profile={profile} />\r\n              <Content>\r\n                <Flex alignItems=\"center\">\r\n                  <Username>@{usernameVisibilityToggled ? username : username.replace(/./g, '*')}</Username>\r\n                  <Icon ml=\"4px\" onClick={toggleUsernameVisibility} cursor=\"pointer\" />\r\n                </Flex>\r\n                <Flex alignItems=\"center\">\r\n                  <AddressLink href={getBscScanLink(account, 'address')} color=\"text\" external>\r\n                    {account}\r\n                    <OpenNewIcon ml=\"4px\" />\r\n                  </AddressLink>\r\n                </Flex>\r\n                <ResponsiveText bold>{team.name}</ResponsiveText>\r\n              </Content>\r\n            </Flex>\r\n            <Status>\r\n              {isActive ? (\r\n                <Tag startIcon={<CheckmarkCircleIcon width=\"18px\" />} outline>\r\n                  {t('Active')}\r\n                </Tag>\r\n              ) : (\r\n                <Tag variant=\"failure\" startIcon={<BlockIcon width=\"18px\" />} outline>\r\n                  {t('Paused')}\r\n                </Tag>\r\n              )}\r\n            </Status>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <StatBox icon={PrizeIcon} title={points} subtitle={t('Points')} mb=\"24px\" />\r\n            <Section>\r\n              <Heading as=\"h4\" scale=\"md\" mb=\"16px\">\r\n                {t('Achievements')}\r\n              </Heading>\r\n              <AchievementsList />\r\n            </Section>\r\n            <Collectibles />\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PublicProfile\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport Page from 'components/Layout/Page'\r\nimport PageLoader from 'components/Loader/PageLoader'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { useFetchAchievements } from 'state/achievements/hooks'\r\nimport ProfileCreation from './ProfileCreation'\r\nimport Header from './components/Header'\r\nimport TaskCenter from './TaskCenter'\r\nimport PublicProfile from './PublicProfile'\r\n\r\nconst Profile = () => {\r\n  const { isInitialized, isLoading, hasProfile } = useProfile()\r\n  const { account } = useWeb3React()\r\n\r\n  useFetchAchievements()\r\n\r\n  if (!isInitialized || isLoading) {\r\n    return <PageLoader />\r\n  }\r\n\r\n  if (account && !hasProfile) {\r\n    return (\r\n      <Page>\r\n        <ProfileCreation />\r\n      </Page>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Page>\r\n      <Header />\r\n      <Route exact path=\"/profile\">\r\n        <PublicProfile />\r\n      </Route>\r\n      <Route path=\"/profile/tasks\">\r\n        <TaskCenter />\r\n      </Route>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import { useEffect, useReducer, useRef } from 'react'\r\nimport { noop } from 'lodash'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { ethers } from 'ethers'\r\nimport useToast from 'hooks/useToast'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\r\n\r\ntype Action =\r\n  | { type: 'requires_approval' }\r\n  | { type: 'approve_sending' }\r\n  | { type: 'approve_receipt' }\r\n  | { type: 'approve_error' }\r\n  | { type: 'confirm_sending' }\r\n  | { type: 'confirm_receipt' }\r\n  | { type: 'confirm_error' }\r\n\r\ninterface State {\r\n  approvalState: LoadingState\r\n  confirmState: LoadingState\r\n}\r\n\r\nconst initialState: State = {\r\n  approvalState: 'idle',\r\n  confirmState: 'idle',\r\n}\r\n\r\nconst reducer = (state: State, actions: Action): State => {\r\n  switch (actions.type) {\r\n    case 'requires_approval':\r\n      return {\r\n        ...state,\r\n        approvalState: 'success',\r\n      }\r\n    case 'approve_sending':\r\n      return {\r\n        ...state,\r\n        approvalState: 'loading',\r\n      }\r\n    case 'approve_receipt':\r\n      return {\r\n        ...state,\r\n        approvalState: 'success',\r\n      }\r\n    case 'approve_error':\r\n      return {\r\n        ...state,\r\n        approvalState: 'fail',\r\n      }\r\n    case 'confirm_sending':\r\n      return {\r\n        ...state,\r\n        confirmState: 'loading',\r\n      }\r\n    case 'confirm_receipt':\r\n      return {\r\n        ...state,\r\n        confirmState: 'success',\r\n      }\r\n    case 'confirm_error':\r\n      return {\r\n        ...state,\r\n        confirmState: 'fail',\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\ninterface OnSuccessProps {\r\n  state: State\r\n  receipt: ethers.providers.TransactionReceipt\r\n}\r\n\r\ninterface ApproveConfirmTransaction {\r\n  onApprove: () => Promise<ethers.providers.TransactionResponse>\r\n  onConfirm: () => Promise<ethers.providers.TransactionResponse>\r\n  onRequiresApproval?: () => Promise<boolean>\r\n  onSuccess: ({ state, receipt }: OnSuccessProps) => void\r\n  onApproveSuccess?: ({ state, receipt }: OnSuccessProps) => void\r\n}\r\n\r\nconst useApproveConfirmTransaction = ({\r\n  onApprove,\r\n  onConfirm,\r\n  onRequiresApproval,\r\n  onSuccess = noop,\r\n  onApproveSuccess = noop,\r\n}: ApproveConfirmTransaction) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const handlePreApprove = useRef(onRequiresApproval)\r\n  const { toastError } = useToast()\r\n\r\n  // Check if approval is necessary, re-check if account changes\r\n  useEffect(() => {\r\n    if (account && handlePreApprove.current) {\r\n      handlePreApprove.current().then((result) => {\r\n        if (result) {\r\n          dispatch({ type: 'requires_approval' })\r\n        }\r\n      })\r\n    }\r\n  }, [account, handlePreApprove, dispatch])\r\n\r\n  return {\r\n    isApproving: state.approvalState === 'loading',\r\n    isApproved: state.approvalState === 'success',\r\n    isConfirming: state.confirmState === 'loading',\r\n    isConfirmed: state.confirmState === 'success',\r\n    handleApprove: async () => {\r\n      try {\r\n        const tx = await onApprove()\r\n        dispatch({ type: 'approve_sending' })\r\n        const receipt = await tx.wait()\r\n        if (receipt.status) {\r\n          dispatch({ type: 'approve_receipt' })\r\n          onApproveSuccess({ state, receipt })\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: 'approve_error' })\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      }\r\n    },\r\n    handleConfirm: async () => {\r\n      dispatch({ type: 'confirm_sending' })\r\n      try {\r\n        const tx = await onConfirm()\r\n        const receipt = await tx.wait()\r\n        if (receipt.status) {\r\n          dispatch({ type: 'confirm_receipt' })\r\n          onSuccess({ state, receipt })\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: 'confirm_error' })\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      }\r\n    },\r\n  }\r\n}\r\n\r\nexport default useApproveConfirmTransaction\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronRightIcon, Button as UIKitButton, AutoRenewIcon, ChevronDownIcon, Box, Flex } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nexport enum ButtonArrangement {\r\n  ROW = 'row',\r\n  SEQUENTIAL = 'sequential',\r\n}\r\n\r\ninterface ApproveConfirmButtonsProps {\r\n  isApproveDisabled: boolean\r\n  isApproving: boolean\r\n  isConfirming: boolean\r\n  isConfirmDisabled: boolean\r\n  onApprove: () => void\r\n  onConfirm: () => void\r\n  buttonArrangement?: ButtonArrangement\r\n  confirmLabel?: string\r\n  confirmId?: string\r\n}\r\n\r\nconst StyledApproveConfirmButtonRow = styled.div`\r\n  align-items: center;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  justify-content: center;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-template-columns: 1fr 24px 1fr;\r\n  }\r\n`\r\n\r\nconst Button = styled(UIKitButton)`\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    min-width: 160px;\r\n  }\r\n`\r\n\r\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\r\n\r\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\r\n  display: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\r\n  display: block;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\r\n\r\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\r\n  isApproveDisabled,\r\n  isApproving,\r\n  isConfirming,\r\n  isConfirmDisabled,\r\n  onApprove,\r\n  onConfirm,\r\n  buttonArrangement = ButtonArrangement.ROW,\r\n  confirmLabel,\r\n  confirmId,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const confirmButtonText = confirmLabel ?? t('Confirm')\r\n\r\n  const ApproveConfirmRow = () => {\r\n    return (\r\n      <StyledApproveConfirmButtonRow>\r\n        <Box>\r\n          <Button\r\n            disabled={isApproveDisabled}\r\n            onClick={onApprove}\r\n            endIcon={isApproving ? spinnerIcon : undefined}\r\n            isLoading={isApproving}\r\n          >\r\n            {isApproving ? t('Enabling') : t('Enable')}\r\n          </Button>\r\n        </Box>\r\n        <Flex justifyContent=\"center\">\r\n          <ChevronRight />\r\n          <ChevronBottom />\r\n        </Flex>\r\n        <Box>\r\n          <Button\r\n            id={confirmId}\r\n            onClick={onConfirm}\r\n            disabled={isConfirmDisabled}\r\n            isLoading={isConfirming}\r\n            endIcon={isConfirming ? spinnerIcon : undefined}\r\n          >\r\n            {isConfirming ? t('Confirming') : confirmButtonText}\r\n          </Button>\r\n        </Box>\r\n      </StyledApproveConfirmButtonRow>\r\n    )\r\n  }\r\n\r\n  const ApproveConfirmSequential = () => {\r\n    return (\r\n      <>\r\n        {isApproveDisabled ? (\r\n          <Box>\r\n            <Button\r\n              id={confirmId}\r\n              onClick={onConfirm}\r\n              disabled={isConfirmDisabled}\r\n              isLoading={isConfirming}\r\n              endIcon={isConfirming ? spinnerIcon : undefined}\r\n            >\r\n              {isConfirming ? t('Confirming') : confirmButtonText}\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <Box>\r\n            <Button onClick={onApprove} endIcon={isApproving ? spinnerIcon : undefined} isLoading={isApproving}>\r\n              {isApproving ? t('Enabling') : t('Enable')}\r\n            </Button>\r\n          </Box>\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return buttonArrangement === ButtonArrangement.ROW ? ApproveConfirmRow() : ApproveConfirmSequential()\r\n}\r\n\r\nexport default ApproveConfirmButtons\r\n","import React from 'react'\r\nimport { NoProfileAvatarIcon } from '@pancakeswap/uikit'\r\nimport { Profile } from 'state/types'\r\nimport styled from 'styled-components'\r\n\r\nexport interface ProfileAvatarProps {\r\n  profile: Profile\r\n}\r\n\r\nconst TeamAvatar = styled.img`\r\n  border: 1px solid ${({ theme }) => theme.card.background};\r\n  border-radius: 50%;\r\n  bottom: 0px;\r\n  position: absolute;\r\n  right: 0px;\r\n  min-width: 20px;\r\n  min-height: 20px;\r\n  width: 37.5%;\r\n  height: 37.5%;\r\n  z-index: 5;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    border-width: 2px;\r\n  }\r\n`\r\n\r\nconst AvatarWrapper = styled.div<{ bg: string }>`\r\n  background: url('${({ bg }) => bg}');\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  & > img {\r\n    border-radius: 50%;\r\n  }\r\n`\r\n// TODO: replace with no profile avatar icon\r\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nconst ProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\r\n  return (\r\n    <AvatarWrapper bg={`/images/nfts/${profile.nft?.images?.md}`}>\r\n      {!profile.isActive && <AvatarInactive />}\r\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\r\n    </AvatarWrapper>\r\n  )\r\n}\r\n\r\nexport default ProfileAvatar\r\n","import { useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport Nfts from 'config/constants/nfts'\r\nimport { State } from '../types'\r\nimport { fetchWalletNfts } from './index'\r\n\r\nexport const useGetCollectibles = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useAppDispatch()\r\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.collectibles)\r\n  const identifiers = Object.keys(data)\r\n\r\n  useEffect(() => {\r\n    // Fetch nfts only if we have not done so already\r\n    if (!isInitialized) {\r\n      dispatch(fetchWalletNfts(account))\r\n    }\r\n  }, [isInitialized, account, dispatch])\r\n\r\n  return {\r\n    isInitialized,\r\n    isLoading,\r\n    tokenIds: data,\r\n    nftsInWallet: Nfts.filter((nft) => identifiers.includes(nft.identifier)),\r\n  }\r\n}\r\n","import { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport { Team } from 'config/constants/types'\r\nimport { State, TeamsState } from '../types'\r\nimport { fetchTeam, fetchTeams } from '.'\r\n\r\nexport const useTeam = (id: number) => {\r\n  const team: Team = useSelector((state: State) => state.teams.data[id])\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeam(id))\r\n  }, [id, dispatch])\r\n\r\n  return team\r\n}\r\n\r\nexport const useTeams = () => {\r\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeams())\r\n  }, [dispatch])\r\n\r\n  return { teams: data, isInitialized, isLoading }\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst HeaderWrapper = styled.div`\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  margin-bottom: 24px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nexport default HeaderWrapper\r\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}","import React from 'react'\r\nimport { BunnyPlaceholderIcon, Flex, Heading } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface ComingSoonProps {\r\n  children?: React.ReactNode\r\n}\r\n\r\nconst ComingSoon: React.FC<ComingSoonProps> = ({ children }) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" p=\"24px\">\r\n      <BunnyPlaceholderIcon width=\"72px\" height=\"72px\" />\r\n      <Heading as=\"h5\" scale=\"md\" color=\"textDisabled\">\r\n        {children || t('Coming Soon!')}\r\n      </Heading>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default ComingSoon\r\n","import styled from 'styled-components'\r\nimport { Text } from '@pancakeswap/uikit'\r\n\r\nconst SecondaryCard = styled(Text)`\r\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\r\n  border-radius: 16px;\r\n`\r\n\r\nSecondaryCard.defaultProps = {\r\n  p: '24px',\r\n}\r\n\r\nexport default SecondaryCard\r\n","import React, { ElementType, ReactNode } from 'react'\r\nimport { Flex, Heading, Text, TextProps } from '@pancakeswap/uikit'\r\nimport SecondaryCard from './SecondaryCard'\r\n\r\ninterface StatBoxProps extends TextProps {\r\n  icon: ElementType\r\n  title: ReactNode\r\n  subtitle: ReactNode\r\n  isDisabled?: boolean\r\n}\r\n\r\nconst StatBox: React.FC<StatBoxProps> = ({ icon: Icon, title, subtitle, isDisabled = false, ...props }) => {\r\n  return (\r\n    <SecondaryCard {...props}>\r\n      <Flex alignItems=\"start\">\r\n        <Icon width=\"44px\" mr=\"24px\" color={isDisabled ? 'textDisabled' : 'currentColor'} />\r\n        <div>\r\n          <Heading as=\"h3\" scale=\"xl\" color={isDisabled ? 'textDisabled' : 'text'}>\r\n            {title}\r\n          </Heading>\r\n          <Text textTransform=\"uppercase\" color={isDisabled ? 'textDisabled' : 'textSubtle'} fontSize=\"12px\" bold>\r\n            {subtitle}\r\n          </Text>\r\n        </div>\r\n      </Flex>\r\n    </SecondaryCard>\r\n  )\r\n}\r\n\r\nexport default StatBox\r\n","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n"],"sourceRoot":""}